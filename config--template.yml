# Run configurations: Choose from 'vqe', 'redundant', and 'zne'.
run: "zne"

# System configuration
nqubits: 4
state: "dmatrix"

# Target Hamiltonian configuration
observable:
  # Definition options: 'custom', 'ising', 'xy_model-xz-z', or 'heisenberg'.
  # 'custom' is based on the definition of 'xy_model-xz-z', which is an XY-model Hamiltonian.
  def: "ising"
  # WARNING: Coefficients are only applicable for 'def: custom' and can be overwritten if 'def' is specified as anything else.
  # 'ising': cn, bn, r are overwritten to [0.5], [1], [1]
  # 'xy_model-xz-z': cn, bn, r are overwritten to [1.0], [1.0], [1.0]
  # 'heisenberg': only has cn (will Not be overwritten); bn and r are not used.
  coefficients:
    cn: [0.5, 0.5, 0.5] 
    bn: [1.0, 1.0, 1.0, 1.0]
    r: 1

# Output configuration
output:
  file_name_prefix: "Ztest"
  draw:
    status: False
    fig_dpi: 100
    type: "png"

# (1) Variational Quantum Eigensolver (VQE) configuration
vqe:
  iteration: 1

  # Optimization configuration
  optimization:
    status: True
    algorithm: "SLSQP"
    constraint: False

  # Circuit configuration
  ansatz:
    # Type options: 'custom', 'xy-iss', 'ising', and 'heisenberg'.
    # 'custom' and 'xy-iss' are based on the definition of 'xy_model-xz-z', which is an XY-model Hamiltonian.
    # WARNING: For ZNE redundant circuit, identity-scaling the ansatz type must be 'xy-iss' (stands for XY identity-scaling-supported).
    type: "xy-iss"
    layer: 10
    gateset: 1
    ugate:
    # WARNING: Coefficients are only applicable for 'type: custom' and can be overwritten if 'type' is specified as a different model.
    # 'ising': cn, bn, r are overwritten to [0.5], [1], [1].
    # 'xy-iss': cn, bn, r are overwritten to [0.5], [0], [0] and supports identity scaling.
    # 'heisenberg': only has cn (will Not be overwritten); bn and r are not used.
      coefficients:
        cn: [0.5, 0.5, 0.5]
        bn: [0, 0, 0, 0]
        r: 0
      time:
        min: 0.0
        max: 10.0
    noise:
      status: True
      value: [0.001, 0.01, 0.001, 0.01] # Noise probabilities for [r, cz, u, y] gates.

    # Initial parameters for the ansatz
    init_param: [2.1276827066566417, 4.523524812312781, 5.593668640518239, 3.7031207143357054, 4.860642499484038, 4.431036950340006, 5.063138211107895, 5.229113275841695, 6.81081757774453, 8.917657757834858, 0.5888777956968063, 0.7673477454620121, 0.7227143831113501, -1.2998813042173971, -0.3705026259979184, -0.29411066388068735, -0.006787626042206446, 0.6139814715364401, 0.5372801400962354, 0.4481461650850497, -0.09363679263650714, -0.22276579061295987, 0.21976034875143124, 0.4412071976691141, -0.3790128843656162, 1.535320312596182, -0.6735487516212452, -0.058484912487370394, -0.8017657997615634, 1.1155831438900699, 0.531033787772884, 0.21678721516229668, 0.09550566952260622, 0.6246960889234686, 0.41830953134775023, 0.6833303029629177, -1.0875146571270717, 0.4094664362324743, -1.4191359461985027, -0.8022011101096347, 0.04744309321145705, 0.12279759641289026, -1.1029428270676536, 1.917543097677033, -0.20038954480897303, -1.4300638794616178, 1.3909431034257946, 1.7225570166727628, 0.908270110208929, 1.625662811777366]

# (2) Redundant circuit configuration
  # Identity factors for r, U, Y, and CZ gates
  # WARNING: Identity scaling for the U gate is only possible if vqe.ansatz.type is 'xy_model-xz-z'. For other types, the identity factor for the U gate must be set to 0.
identity_factors: [
    [1, 0, 0, 1], [2, 3, 2, 1], [2, 1, 4, 1], [3, 4, 1, 3], [1, 2, 8, 1], [1, 2, 6, 0]
]

# (3) Zero noise extrapolation (ZNE) configuration
zne:
  # Method options: 'linear', 'polynomial', 'richardson', or 'richardson-mul'
  # 'linear' and 'polynomial' use scikit-learn for regression.
  method: "linear"

  # Degree is only applicable for 'polynomial' and 'richardson-mul'. For 'richardson', degree is computed based on the number of data points.
  degree: 1

  # Sampling method options: 'default', 'default-N', or 'random-N', where N is an integer.
  # 'default' - samples all points.
  # 'default-N' - samples the first N points.
  # 'random-N' - samples N points randomly.
  sampling: "default-5"
  
  # Data points for extrapolation
  data_points:  [[12, 1, 0, 3, -3.3480294367352315], [20, 7, 10, 3, -0.05316450776222178], [20, 3, 18, 3, -0.24353493819026245], [28, 9, 6, 7, -0.07704792314135728], [12, 5, 34, 3, -0.0012646197204783454], [12, 5, 26, 1, -0.0065357173034639015]]